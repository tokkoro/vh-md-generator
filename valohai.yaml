- step:
    name: preprocess
    image: python:3.10
    command:
      - python ./output_pipeline_task_storeid.py
- step:
    name: train
    image: python:3.10
    command:
      - pip install valohai-utils
      - python ./input_pipeline_task_storeid.py {parameters}
    parameters:
    - name: id
      type: string
- step:
    name: train-erroneuos
    image: python:3.10
    command:
      - pip install valohai-utils
      - python ./input_pipeline_task_storeid_error.py {parameters}
    parameters:
    - name: id
      type: string
- step:
    name: end-step
    image: python
    command:
      - python train.py {parameters}
    parameters:
      - name: how_random
        description: How random you want the metadata to be
        type: float
        default: 0.05
      - name: epochs
        description: How many epochs do you want?
        type: integer
        default: 10
      - name: wait_time
        description: How long to wait between generated metadata (seconds)
        type: float
        default: 1
    inputs:
    - name: cluster_input
      optional: false
- pipeline:
    name: task pipeline
    nodes:
    - name: preprocess
      step: preprocess
      type: execution
      on-error: continue
    - name: train
      step: train
      type: task
      on-error: continue
    - name: train-erroneuos
      step: train-erroneuos
      type: task
      on-error: continue
    - name: end
      step: end-step
      type: execution
      on-error: continue
    - name: end-after-error
      step: end-step
      type: execution
      on-error: stop-all
    edges:
    - [preprocess.metadata.storeids, train.parameter.id]
    - [train.output.output_file.txt, end.input.cluster_input]
    - [preprocess.metadata.storeids, train-erroneuos.parameter.id]
    - [train-erroneuos.output.output_file.txt, end-after-error.input.cluster_input]
- pipeline:
    name: task pipeline in line
    nodes:
      - name: preprocess
        step: preprocess
        type: execution
        on-error: continue
      - name: train-erroneuos
        step: train-erroneuos
        type: task
        on-error: continue
      - name: end-after-error
        step: end-step
        type: execution
        on-error: stop-all
    edges:
      - [ preprocess.metadata.storeids, train-erroneuos.parameter.id ]
      - [ train-erroneuos.output.output_file.txt, end-after-error.input.cluster_input ]
- pipeline:
    name: task in line no errors
    nodes:
      - name: preprocess
        step: preprocess
        type: execution
        on-error: stop-all
      - name: train
        step: train
        type: task
        on-error: stop-all
      - name: end
        step: end-step
        type: execution
        on-error: stop-all
    edges:
      - [ preprocess.metadata.storeids, train.parameter.id ]
      - [ train.output.output_file.txt, end.input.cluster_input ]

- pipeline:
    name: task pipeline stop-all
    nodes:
    - name: preprocess
      step: preprocess
      type: execution
      on-error: stop-all
    - name: train
      step: train
      type: task
      on-error: stop-all
    - name: train-erroneuos
      step: train-erroneuos
      type: task
      on-error: stop-all
    - name: end
      step: end-step
      type: execution
      on-error: stop-all
    - name: end-after-error
      step: end-step
      type: execution
      on-error: stop-all
    edges:
    - [preprocess.metadata.storeids, train.parameter.id]
    - [train.output.output_file.txt, end.input.cluster_input]
    - [preprocess.metadata.storeids, train-erroneuos.parameter.id]
    - [train-erroneuos.output.output_file.txt, end-after-error.input.cluster_input]
- pipeline:
    name: task pipeline stop-next
    nodes:
      - name: preprocess
        step: preprocess
        type: execution
        on-error: stop-next
      - name: train
        step: train
        type: task
        on-error: stop-next
      - name: train-erroneuos
        step: train-erroneuos
        type: task
        on-error: stop-next
      - name: end
        step: end-step
        type: execution
        on-error: stop-next
      - name: end-after-error
        step: end-step
        type: execution
        on-error: stop-next
    edges:
      - [ preprocess.metadata.storeids, train.parameter.id ]
      - [ train.output.output_file.txt, end.input.cluster_input ]
      - [ preprocess.metadata.storeids, train-erroneuos.parameter.id ]
      - [ train-erroneuos.output.output_file.txt, end-after-error.input.cluster_input ]